{"version":3,"sources":["index.js"],"names":["express","require","mongoose","morgan","cors","config","Connection","Request","path","axios","bodyParser","formRouters","opportunityRouter","app","use","json","set","urlencodedParser","urlencoded","extended","__dirname","port","process","env","PORT","server","listen","console","log","authentication","options","userName","password","type","database","encrypt","connection","on","err","error","message","queryDatabase","connect","request","rowCount","columns","forEach","column","metadata","colName","value","execSql","orgin","credentials","testRoutes","get","req","res","render","title"],"mappings":"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","sourcesContent":["//import modules\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst morgan = require('morgan');\r\nconst cors = require('cors');\r\nrequire(\"dotenv\").config();\r\nconst { Connection, Request } = require(\"tedious\");\r\n\r\n//marlie eddie index.js\r\nconst path = require('path'); //why you need this eddie?\r\nconst axios = require('axios');\r\nvar bodyParser = require('body-parser')\r\n\r\nvar formRouters = require(\"./routers/formRouter\");\r\nvar opportunityRouter = require(\"./routers/opportunityRouter\");\r\n//app\r\nconst app = express();\r\napp.use(express.json());\r\n\r\n//marlie pug\r\napp.set('view engine', 'pug');\r\n  \r\napp.use(urlencodedParser = bodyParser.urlencoded({ extended: false }));\r\napp.use(express.static(__dirname));\r\n\r\napp.use('/', formRouters);\r\n\r\n//Rabani\r\napp.use('/opportunity', opportunityRouter);\r\n\r\n//port\r\nconst port = process.env.PORT || 3000;\r\n\r\n//listener\r\nconst server = app.listen(port, () => \r\nconsole.log(`server is running on port ${port}`)\r\n);\r\n\r\n\r\n//db2\r\n// Create connection to database\r\nconst config = {\r\n    authentication: {\r\n      options: {\r\n        userName: \"azureuserD4C\", \r\n        password: \"D4Change123\" \r\n      },\r\n      type: \"default\"\r\n    },\r\n    server: \"dreamweeksqlserver.database.windows.net\", \r\n    options: {\r\n      database: \"dreamweekDatabase\", \r\n      encrypt: true\r\n    }\r\n  };\r\n\r\n\r\nconst connection = new Connection(config);\r\n\r\n// Attempt to connect and execute queries if connection goes through\r\nconnection.on(\"connect\", err => {\r\n  if (err) {\r\n    console.error(err.message);\r\n  } else {\r\n    console.log(\"DATABASE CONNECTED\");\r\n    queryDatabase();\r\n  }\r\n // connection.close();\r\n});\r\n\r\nconnection.connect();\r\n\r\nfunction queryDatabase() {\r\n  console.log(\"Reading rows from the Table...\");\r\n\r\n  // Read all rows from table\r\n  const request = new Request(\r\n    `SELECT * FROM SalesLT.Customer`,\r\n    (err, rowCount) => {\r\n      if (err) {\r\n        console.error(err.message);\r\n      } else {\r\n        console.log(`${rowCount} row(s) returned`);\r\n      }\r\n    }\r\n  );\r\n\r\n  request.on(\"row\", columns => {\r\n    columns.forEach(column => {\r\n      console.log(\"%s\\t%s\", column.metadata.colName, column.value);\r\n    });\r\n  });\r\n\r\n  connection.execSql(request);\r\n\r\n  //middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors({ orgin: true, credentials: true}));\r\n//routes\r\nconst testRoutes = require(\"./routers/test\");\r\napp.use(\"/\", testRoutes);\r\n\r\n\r\n}\r\n// render home page\r\napp.get('/', (req, res) => {\r\n  res.render('home', {\r\n      title: 'Home'\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//do you need this line marlie?    \r\n//app.listen(port);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*to do list\r\n*connect it to git hub\r\n*connect it to database\r\n*connect it to azure\r\n*/"],"file":"index.dev.js"}