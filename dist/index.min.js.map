{"version":3,"sources":["index.js"],"names":["express","require","mongoose","cors","Connection","Request","axios","formRouters","app","use","json","set","urlencodedParser","bodyParser","urlencoded","extended","opportunityRouter","env","PORT","port","config","options","server","listen","password","log","type","authentication","userName","queryDatabase","console","request","err","rowCount","error","message","concat","columns","forEach","column","metadata","colName","value","morgan","credentials","orgin","testRoutes","encrypt","on","connection","get","req","res","render","title"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,SAAAD,QAAA,YACMD,OAAUC,QAAQ,UAGlBE,KAAOF,QAAQ,QAFrBA,QAAMC,UAAWD,sBAIeA,QAAQ,WAAhCG,oBAAAA,WAAYC,iBAAAA,QAFdF,KAAOF,QAAQ,QAMfK,MAAQL,QAAQ,SALtBA,WAAAA,QAAA,eAQIM,YAP4BN,QAAQ,wBAAhCG,kBAQgBH,QARhBG,+BAUFI,IAAMR,UACZQ,IAAIC,IAAIT,QAAQU,QAGhBF,IAAIG,IAAI,cAAe,OAEvBH,IAAIC,IAAIG,iBAAmBC,WAAWC,WAAW,CAAEC,UAAU,KAX7DP,IAAIK,IAAAA,QAAU,OAAGZ,YAEjBO,IAAID,IAAAA,IAAAA,aAeJC,IAAIC,IAAI,eAAgBO,mBAXxBR,IAAIC,KAAIT,QAAAiB,IAERC,MAAA,IAGIT,OAAIG,IAAAA,OAAgBO,KAAGN,WAAAA,OAAwBE,QAAAA,IAAAA,6BAAAA,OAAUI,SAmBvDC,OAAS,CAVTD,eAAeF,CAYfI,QAAS,CATTC,SAAaC,eAAaC,SACxBC,eAKRC,KAAA,WACMN,OAAM,0CACRO,QAAAA,CACEN,SAAS,oBACPO,SAAQ,IAKZN,WAAQ,IAAAlB,WAAAgB,QAuBZ,SAASS,gBAZTC,QAAAL,IAAA,kCAYA,IAAAM,EAASF,IAATxB,QAASwB,iCAML,SAACG,EAAKC,GAFFF,EAGEC,QAAKE,MAAAF,EAAAG,SAATL,QAEOL,IAFP,GAAAW,OAEOH,EAFP,uBASFI,EAAAA,GAAQC,MAAQ,SAAAD,GACdP,EAAAA,QAAY,SAAAS,GADdT,QAAAL,IAAA,SAAAc,EAAAC,SAAAC,QAAAF,EAAAG,WAQJlC,WAAQmC,QAAOZ,GACaa,IAAAA,IAAAA,OAAW,QAA1BpC,IAAbC,IACAN,KAAA,CAAA0C,OAAA,EAAAD,aAAA,KACA,IAAME,EAAa7C,QAAQ,kBAC3BO,IAAIC,IAAI,IAAKqC,GAhDPC,WAAOC,GAAE,UAAA,SAAAhB,GAFFA,EATbF,QAAAI,MAAAF,EAAAG,UAuBIL,QAAQL,IAAI,sBAJhBwB,mBAKIpB,WAAAA,UAwCJrB,IAAI0C,IAAI,IAAK,SAAAC,EAAAC,GACXA,EAAIC,OAAO,OAAQ,CACfC,MAAO","file":"index.min.js","sourcesContent":["//import modules\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst morgan = require('morgan');\r\nconst cors = require('cors');\r\nrequire(\"dotenv\").config();\r\nconst { Connection, Request } = require(\"tedious\");\r\n\r\n//marlie eddie index.js\r\nconst path = require('path'); //why you need this eddie?\r\nconst axios = require('axios');\r\nvar bodyParser = require('body-parser')\r\n\r\nvar formRouters = require(\"./routers/formRouter\");\r\nvar opportunityRouter = require(\"./routers/opportunityRouter\");\r\n//app\r\nconst app = express();\r\napp.use(express.json());\r\n\r\n//marlie pug\r\napp.set('view engine', 'pug');\r\n  \r\napp.use(urlencodedParser = bodyParser.urlencoded({ extended: false }));\r\napp.use(express.static(__dirname));\r\n\r\napp.use('/', formRouters);\r\n\r\n//Rabani\r\napp.use('/opportunity', opportunityRouter);\r\n\r\n//port\r\nconst port = process.env.PORT || 3000;\r\n\r\n//listener\r\nconst server = app.listen(port, () => \r\nconsole.log(`server is running on port ${port}`)\r\n);\r\n\r\n\r\n//db2\r\n// Create connection to database\r\nconst config = {\r\n    authentication: {\r\n      options: {\r\n        userName: \"azureuserD4C\", \r\n        password: \"D4Change123\" \r\n      },\r\n      type: \"default\"\r\n    },\r\n    server: \"dreamweeksqlserver.database.windows.net\", \r\n    options: {\r\n      database: \"dreamweekDatabase\", \r\n      encrypt: true\r\n    }\r\n  };\r\n\r\n\r\nconst connection = new Connection(config);\r\n\r\n// Attempt to connect and execute queries if connection goes through\r\nconnection.on(\"connect\", err => {\r\n  if (err) {\r\n    console.error(err.message);\r\n  } else {\r\n    console.log(\"DATABASE CONNECTED\");\r\n    queryDatabase();\r\n  }\r\n // connection.close();\r\n});\r\n\r\nconnection.connect();\r\n\r\nfunction queryDatabase() {\r\n  console.log(\"Reading rows from the Table...\");\r\n\r\n  // Read all rows from table\r\n  const request = new Request(\r\n    `SELECT * FROM SalesLT.Customer`,\r\n    (err, rowCount) => {\r\n      if (err) {\r\n        console.error(err.message);\r\n      } else {\r\n        console.log(`${rowCount} row(s) returned`);\r\n      }\r\n    }\r\n  );\r\n\r\n  request.on(\"row\", columns => {\r\n    columns.forEach(column => {\r\n      console.log(\"%s\\t%s\", column.metadata.colName, column.value);\r\n    });\r\n  });\r\n\r\n  connection.execSql(request);\r\n\r\n  //middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors({ orgin: true, credentials: true}));\r\n//routes\r\nconst testRoutes = require(\"./routers/test\");\r\napp.use(\"/\", testRoutes);\r\n\r\n\r\n}\r\n// render home page\r\napp.get('/', (req, res) => {\r\n  res.render('home', {\r\n      title: 'Home'\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//do you need this line marlie?    \r\n//app.listen(port);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*to do list\r\n*connect it to git hub\r\n*connect it to database\r\n*connect it to azure\r\n*/"]}